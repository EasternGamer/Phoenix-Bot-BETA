/*

 * To change this license header, choose License Headers in Project Properties.

 * To change this template file, choose Tools | Templates

 * and open the template in the editor.

 */
package net.rising.ui;

import net.rising.file.EFile;
import sx.blah.discord.handle.obj.IGuild;
import sx.blah.discord.handle.obj.IUser;

import javax.imageio.ImageIO;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import static net.rising.ui.MainUI.bot;

/**
 * @author crysi
 */
public class UtilityUI extends javax.swing.JFrame {

    private static IUser userling;
    private static IGuild guildling;
    // Variables declaration - do not modify
    private javax.swing.JButton jButtonDiscard;
    private javax.swing.JButton jButtonGuildSearch;
    private javax.swing.JButton jButtonMessage;
    private javax.swing.JButton jButtonPerm;
    private javax.swing.JButton jButtonUserSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextFieldServer;
    private javax.swing.JTextField jTextFieldUser;

    /**
     * Creates new form UtilityUI
     */
    public UtilityUI() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * <p>
     * WARNING: Do NOT modify this code. The content of this method is always
     * <p>
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jTextFieldUser = new javax.swing.JTextField();

        jTextFieldServer = new javax.swing.JTextField();

        jLabel1 = new javax.swing.JLabel();

        jLabel2 = new javax.swing.JLabel();

        jButtonGuildSearch = new javax.swing.JButton();

        jButtonUserSearch = new javax.swing.JButton();

        jScrollPane1 = new javax.swing.JScrollPane();

        jTextArea = new javax.swing.JTextArea();

        jButtonDiscard = new javax.swing.JButton();

        jButtonMessage = new javax.swing.JButton();

        jButtonPerm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowOpened(java.awt.event.WindowEvent evt) {

                formWindowOpened(evt);

            }

        });

        jTextFieldUser.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jTextFieldServer.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jLabel1.setText("User");

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jLabel2.setText("Server");

        jButtonGuildSearch.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jButtonGuildSearch.setText("Guild Search");

        jButtonGuildSearch.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                jButtonGuildSearchActionPerformed(evt);

            }

        });

        jButtonUserSearch.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jButtonUserSearch.setText("User Search");

        jButtonUserSearch.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                jButtonUserSearchActionPerformed(evt);

            }

        });

        jTextArea.setColumns(20);

        jTextArea.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jTextArea.setRows(5);

        jScrollPane1.setViewportView(jTextArea);

        jButtonDiscard.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jButtonDiscard.setText("Discard");

        jButtonDiscard.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                jButtonDiscardActionPerformed(evt);

            }

        });

        jButtonMessage.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jButtonMessage.setText("Private Message Player: NULL");

        jButtonMessage.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                jButtonMessageActionPerformed(evt);

            }

        });

        jButtonPerm.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N

        jButtonPerm.setText("Get Permissions");

        jButtonPerm.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {

                jButtonPermActionPerformed(evt);

            }

        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());

        getContentPane().setLayout(layout);

        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButtonUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                                .addComponent(jButtonMessage)
                                                .addGap(41, 41, 41)
                                                .addComponent(jButtonPerm))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel1))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jTextFieldServer, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                                        .addComponent(jTextFieldUser))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonDiscard))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButtonGuildSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(jScrollPane1))
                                .addGap(29, 29, 29))
        );

        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addComponent(jButtonDiscard))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonGuildSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonUserSearch)
                                        .addComponent(jButtonMessage)
                                        .addComponent(jButtonPerm))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();

    }// </editor-fold>

    private void jButtonGuildSearchActionPerformed(java.awt.event.ActionEvent evt) {

        // TODO add your handling code here:
        String item = jTextFieldServer.getText();

        bot.getGuilds().parallelStream()
                .filter(g -> g.getName().equals(item))
                .forEach(g -> {

                    StringBuilder builder = new StringBuilder();

                    builder.append("Server Name: ").append(g.getName()).append("\n");

                    builder.append("Owner Name: ").append(g.getOwner().getName()).append("\n");

                    jTextArea.setText(builder.toString());

                    guildling = g;

                });

    }

    private void jButtonDiscardActionPerformed(java.awt.event.ActionEvent evt) {

        // TODO add your handling code here:
        dispose();

    }

    private void jButtonUserSearchActionPerformed(java.awt.event.ActionEvent evt) {

        // TODO add your handling code here:|
        String item = jTextFieldUser.getText();

        jButtonMessage.setText("Private Message Player: " + item);

        bot.getGuilds().parallelStream()
                .forEach(g -> {

                    StringBuilder builder = new StringBuilder();

                    g.getUsers().parallelStream()
                            .filter(user -> user.getName().contains(item))
                            .forEach(user -> {

                                builder.append("Server Name: ").append(g.getName()).append("\n");

                                builder.append("Owner Name: ").append(g.getOwner().getName()).append("\n");

                                builder.append("User: ").append(user.getName()).append("\n");

                                builder.append("User Permissions: ").append(user.getPermissionsForGuild(g)).append("\n");

                                jTextArea.setText(builder.toString());

                                userling = user;

                            });

                });

    }

    private void jButtonMessageActionPerformed(java.awt.event.ActionEvent evt) {

        // TODO add your handling code here:
        userling.getOrCreatePMChannel().sendMessage("**Developer: ** " + jTextArea.getText());

    }

    private void jButtonPermActionPerformed(java.awt.event.ActionEvent evt) {

        // TODO add your handling code here:
        bot.getGuilds().parallelStream()
                .filter(guild -> guild.getName().equals(jTextFieldServer.getText()))
                .forEach(guild -> {

                    StringBuilder build = new StringBuilder();

                    build.append(bot.getOurUser().getPermissionsForGuild(guild));

                    jTextArea.setText(build.toString());

                });

    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {

        // TODO add your handling code here:
        try {

            setIconImage(ImageIO.read(new EFile("C:\\Users\\Administrator\\Desktop\\Phoenix Bot Data\\Images\\", "images.png").getFile()));

        } catch (IOException ex) {

            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);

        }

    }

    // End of variables declaration                   
}
